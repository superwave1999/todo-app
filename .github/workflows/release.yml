name: Test, Build and Publish Docker Image

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    #tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  ### COPIED FROM test.yml ###
  laravel-tests:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.11
        env:
          MARIADB_USER: sail
          MARIADB_PASSWORD: password
          MARIADB_ROOT_PASSWORD: password
          MARIADB_DATABASE: sail
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Optimize
        run: php artisan optimize
      - name: Migrate
        run: php artisan migrate --force
      - name: Seed
        run: php artisan db:seed
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: php artisan test
      - name: Check if code is formatted
        run: composer check-style
  ### END COPIED FROM test.yml ###


  ### MULTI-ARCH DOCKER BUILDS ###
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: laravel-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          #platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
